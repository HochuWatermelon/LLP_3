<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="identifier" type="xs:string"/>
    <xs:element name="integer" type="xs:integer"/>
    <xs:element name="string" type="xs:string"/>
    <xs:element name="float" type="xs:float"/>
    <xs:element name="boolean" type="xs:boolean"/>

    <xs:element name="EQUAL">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="identifier"/>
                <xs:choice>
                    <xs:element ref="integer"/>
                    <xs:element ref="string"/>
                    <xs:element ref="float"/>
                    <xs:element ref="boolean"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="NOT_EQUAL">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="identifier"/>
                <xs:choice>
                    <xs:element ref="integer"/>
                    <xs:element ref="string"/>
                    <xs:element ref="float"/>
                    <xs:element ref="boolean"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>


    <xs:element name="GREATER_THAN">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="identifier"/>
                <xs:choice>
                    <xs:element ref="integer"/>
                    <xs:element ref="float"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>


    <xs:element name="LESS_THAN">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="identifier"/>
                <xs:choice>
                    <xs:element ref="integer"/>
                    <xs:element ref="float"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="AND">
        <xs:complexType>
            <xs:sequence>
                <xs:choice>
                    <xs:element ref="EQUAL"/>
                    <xs:element ref="GREATER_THAN"/>
                    <xs:element ref="LESS_THAN"/>
                    <xs:element ref="NOT_EQUAL"/>
                </xs:choice>
                <xs:choice>
                    <xs:element ref="EQUAL"/>
                    <xs:element ref="GREATER_THAN"/>
                    <xs:element ref="LESS_THAN"/>
                    <xs:element ref="NOT_EQUAL"/>
                    <xs:element ref="AND"/>
                    <xs:element ref="OR"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="OR">
        <xs:complexType>
            <xs:sequence>
                <xs:choice>
                    <xs:element ref="EQUAL"/>
                    <xs:element ref="GREATER_THAN"/>
                    <xs:element ref="LESS_THAN"/>
                    <xs:element ref="NOT_EQUAL"/>
                </xs:choice>
                <xs:choice>
                    <xs:element ref="EQUAL"/>
                    <xs:element ref="GREATER_THAN"/>
                    <xs:element ref="LESS_THAN"/>
                    <xs:element ref="NOT_EQUAL"/>
                    <xs:element ref="AND"/>
                    <xs:element ref="OR"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="WHERE">
        <xs:complexType>
            <xs:choice>
                <xs:element ref="EQUAL"/>
                <xs:element ref="GREATER_THAN"/>
                <xs:element ref="LESS_THAN"/>
                <xs:element ref="NOT_EQUAL"/>
                <xs:element ref="AND"/>
                <xs:element ref="OR"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:element name="FIELDS_SET">
        <xs:complexType>
            <xs:sequence maxOccurs="unbounded">
                <xs:element ref="identifier"/>
                <xs:choice>
                    <xs:element ref="integer"/>
                    <xs:element ref="string"/>
                    <xs:element ref="float"/>
                    <xs:element ref="boolean"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="TREE_NODE">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="TREE_NODE" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="label" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="find">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="TREE_NODE"/>
                <xs:element ref="WHERE" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="add">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="TREE_NODE"/>
                <xs:element ref="FIELDS_SET"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="remove">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="TREE_NODE"/>
                <xs:element ref="WHERE" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="update">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="TREE_NODE"/>
                <xs:element ref="WHERE" minOccurs="0"/>
                <xs:element ref="FIELDS_SET"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>


    <xs:element name="command">
        <xs:complexType>
            <xs:choice>
                <xs:element ref="find"/>
                <xs:element ref="add"/>
                <xs:element ref="remove"/>
                <xs:element ref="update"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

</xs:schema>